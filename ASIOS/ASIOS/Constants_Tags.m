//
//  Constants_Tags.m
//  ASIOS
//
//  Created by  Nick Pershin on 9/30/13.
//  Copyright (c) 2013  Nick Pershin. All rights reserved.
//
// 	Licensed under the Apache License, Version 2.0 (the "License");
// 	you may not use this file except in compliance with the License.
// 	You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
//	Unless required by applicable law or agreed to in writing, software
//	distributed under the License is distributed on an "AS IS" BASIS,
//	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//	See the License for the specific language governing permissions and
//	limitations under the License.
//


#import "Constants_Tags.h"

@implementation Constants_Tags

// Wbxml page definitions for EAS
int const AIRSYNC   = 0x00;
int const CONTACTS  = 0x01;
int const EMAIL     = 0x02;
int const CALENDAR  = 0x04;
int const MOVE      = 0x05;
int const GIE       = 0x06;
int const FOLDER    = 0x07;
int const MREQ      = 0x08;
int const TASK      = 0x09;
int const CONTACTS2 = 0x0C;
int const PING      = 0x0D;
int const PROVISION = 0x0E;
int const SEARCH    = 0x0F;
int const GAL       = 0x10;
int const BASE      = 0x11;
int const SETTINGS  = 0x12;
int const DOCS      = 0x13;
int const ITEMS     = 0x14;
// 14.0
int const COMPOSE   = 0x15;
int const EMAIL2    = 0x16;
// 14.1
int const NOTES     = 0x17;
int const RIGHTS    = 0x18;

// Shift applied to page numbers to generate tag
int const PAGESHIFT = 6;


int const SYNC_PAGE	= 0 << PAGESHIFT;
int const SYNC_SYNC 			= SYNC_PAGE + 0x05;
int const SYNC_RESPONSES		= SYNC_PAGE + 0x06;
int const SYNC_ADD 				= SYNC_PAGE + 0x07;
int const SYNC_CHANGE 			= SYNC_PAGE + 0x08;
int const SYNC_DELETE 			= SYNC_PAGE + 0x09;
int const SYNC_FETCH 			= SYNC_PAGE + 0x0A;
int const SYNC_SYNC_KEY 		= SYNC_PAGE + 0x0B;
int const SYNC_CLIENT_ID 		= SYNC_PAGE + 0x0C;
int const SYNC_SERVER_ID 		= SYNC_PAGE + 0x0D;
int const SYNC_STATUS 			= SYNC_PAGE + 0x0E;
int const SYNC_COLLECTION 		= SYNC_PAGE + 0x0F;
int const SYNC_CLASS 			= SYNC_PAGE + 0x10;
int const SYNC_VERSION 			= SYNC_PAGE + 0x11;
int const SYNC_COLLECTION_ID 	= SYNC_PAGE + 0x12;
int const SYNC_GET_CHANGES 		= SYNC_PAGE + 0x13;
int const SYNC_MORE_AVAILABLE 	= SYNC_PAGE + 0x14;
int const SYNC_WINDOW_SIZE 		= SYNC_PAGE + 0x15;
int const SYNC_COMMANDS 		= SYNC_PAGE + 0x16;
int const SYNC_OPTIONS 			= SYNC_PAGE + 0x17;
int const SYNC_FILTER_TYPE 		= SYNC_PAGE + 0x18;
int const SYNC_TRUNCATION 		= SYNC_PAGE + 0x19;
int const SYNC_RTF_TRUNCATION 	= SYNC_PAGE + 0x1A;
int const SYNC_CONFLICT 		= SYNC_PAGE + 0x1B;
int const SYNC_COLLECTIONS 		= SYNC_PAGE + 0x1C;
int const SYNC_APPLICATION_DATA = SYNC_PAGE + 0x1D;
int const SYNC_DELETES_AS_MOVES = SYNC_PAGE + 0x1E;
int const SYNC_NOTIFY_GUID 		= SYNC_PAGE + 0x1F;
int const SYNC_SUPPORTED 		= SYNC_PAGE + 0x20;
int const SYNC_SOFT_DELETE 		= SYNC_PAGE + 0x21;
int const SYNC_MIME_SUPPORT 	= SYNC_PAGE + 0x22;
int const SYNC_MIME_TRUNCATION 	= SYNC_PAGE + 0x23;
int const SYNC_WAIT 			= SYNC_PAGE + 0x24;
int const SYNC_LIMIT 			= SYNC_PAGE + 0x25;
int const SYNC_PARTIAL 			= SYNC_PAGE + 0x26;


int const GIE_PAGE = GIE << PAGESHIFT;
int const GIE_GET_ITEM_ESTIMATE = GIE_PAGE + 0x05;
int const GIE_VERSION 			= GIE_PAGE + 0x06;
int const GIE_COLLECTIONS 		= GIE_PAGE + 0x07;
int const GIE_COLLECTION 		= GIE_PAGE + 0x08;
int const GIE_CLASS 			= GIE_PAGE + 0x09;
int const GIE_COLLECTION_ID 	= GIE_PAGE + 0x0A;
int const GIE_DATE_TIME 		= GIE_PAGE + 0x0B;
int const GIE_ESTIMATE 			= GIE_PAGE + 0x0C;
int const GIE_RESPONSE 			= GIE_PAGE + 0x0D;
int const GIE_STATUS 			= GIE_PAGE + 0x0E;


int const CONTACTS_PAGE = CONTACTS << PAGESHIFT;
int const CONTACTS_ANNIVERSARY 					= CONTACTS_PAGE + 0x05;
int const CONTACTS_ASSISTANT_NAME 				= CONTACTS_PAGE + 0x06;
int const CONTACTS_ASSISTANT_TELEPHONE_NUMBER 	= CONTACTS_PAGE + 0x07;
int const CONTACTS_BIRTHDAY 					= CONTACTS_PAGE + 0x08;
int const CONTACTS_BODY 						= CONTACTS_PAGE + 0x09;
int const CONTACTS_BODY_SIZE 					= CONTACTS_PAGE + 0x0A;
int const CONTACTS_BODY_TRUNCATED 				= CONTACTS_PAGE + 0x0B;
int const CONTACTS_BUSINESS2_TELEPHONE_NUMBER 	= CONTACTS_PAGE + 0x0C;
int const CONTACTS_BUSINESS_ADDRESS_CITY 		= CONTACTS_PAGE + 0x0D;
int const CONTACTS_BUSINESS_ADDRESS_COUNTRY 	= CONTACTS_PAGE + 0x0E;
int const CONTACTS_BUSINESS_ADDRESS_POSTAL_CODE = CONTACTS_PAGE + 0x0F;
int const CONTACTS_BUSINESS_ADDRESS_STATE 		= CONTACTS_PAGE + 0x10;
int const CONTACTS_BUSINESS_ADDRESS_STREET 		= CONTACTS_PAGE + 0x11;
int const CONTACTS_BUSINESS_FAX_NUMBER 			= CONTACTS_PAGE + 0x12;
int const CONTACTS_BUSINESS_TELEPHONE_NUMBER 	= CONTACTS_PAGE + 0x13;
int const CONTACTS_CAR_TELEPHONE_NUMBER 		= CONTACTS_PAGE + 0x14;
int const CONTACTS_CATEGORIES 					= CONTACTS_PAGE + 0x15;
int const CONTACTS_CATEGORY 					= CONTACTS_PAGE + 0x16;
int const CONTACTS_CHILDREN 					= CONTACTS_PAGE + 0x17;
int const CONTACTS_CHILD 						= CONTACTS_PAGE + 0x18;
int const CONTACTS_COMPANY_NAME 				= CONTACTS_PAGE + 0x19;
int const CONTACTS_DEPARTMENT 					= CONTACTS_PAGE + 0x1A;
int const CONTACTS_EMAIL1_ADDRESS 				= CONTACTS_PAGE + 0x1B;
int const CONTACTS_EMAIL2_ADDRESS 				= CONTACTS_PAGE + 0x1C;
int const CONTACTS_EMAIL3_ADDRESS 				= CONTACTS_PAGE + 0x1D;
int const CONTACTS_FILE_AS 						= CONTACTS_PAGE + 0x1E;
int const CONTACTS_FIRST_NAME 					= CONTACTS_PAGE + 0x1F;
int const CONTACTS_HOME2_TELEPHONE_NUMBER 		= CONTACTS_PAGE + 0x20;
int const CONTACTS_HOME_ADDRESS_CITY 			= CONTACTS_PAGE + 0x21;
int const CONTACTS_HOME_ADDRESS_COUNTRY 		= CONTACTS_PAGE + 0x22;
int const CONTACTS_HOME_ADDRESS_POSTAL_CODE 	= CONTACTS_PAGE + 0x23;
int const CONTACTS_HOME_ADDRESS_STATE 			= CONTACTS_PAGE + 0x24;
int const CONTACTS_HOME_ADDRESS_STREET 			= CONTACTS_PAGE + 0x25;
int const CONTACTS_HOME_FAX_NUMBER 				= CONTACTS_PAGE + 0x26;
int const CONTACTS_HOME_TELEPHONE_NUMBER 		= CONTACTS_PAGE + 0x27;
int const CONTACTS_JOB_TITLE 					= CONTACTS_PAGE + 0x28;
int const CONTACTS_LAST_NAME 					= CONTACTS_PAGE + 0x29;
int const CONTACTS_MIDDLE_NAME 					= CONTACTS_PAGE + 0x2A;
int const CONTACTS_MOBILE_TELEPHONE_NUMBER 		= CONTACTS_PAGE + 0x2B;
int const CONTACTS_OFFICE_LOCATION 				= CONTACTS_PAGE + 0x2C;
int const CONTACTS_OTHER_ADDRESS_CITY 			= CONTACTS_PAGE + 0x2D;
int const CONTACTS_OTHER_ADDRESS_COUNTRY 		= CONTACTS_PAGE + 0x2E;
int const CONTACTS_OTHER_ADDRESS_POSTAL_CODE 	= CONTACTS_PAGE + 0x2F;
int const CONTACTS_OTHER_ADDRESS_STATE 			= CONTACTS_PAGE + 0x30;
int const CONTACTS_OTHER_ADDRESS_STREET 		= CONTACTS_PAGE + 0x31;
int const CONTACTS_PAGER_NUMBER 				= CONTACTS_PAGE + 0x32;
int const CONTACTS_RADIO_TELEPHONE_NUMBER 		= CONTACTS_PAGE + 0x33;
int const CONTACTS_SPOUSE 						= CONTACTS_PAGE + 0x34;
int const CONTACTS_SUFFIX 						= CONTACTS_PAGE + 0x35;
int const CONTACTS_TITLE 						= CONTACTS_PAGE + 0x36;
int const CONTACTS_WEBPAGE 						= CONTACTS_PAGE + 0x37;
int const CONTACTS_YOMI_COMPANY_NAME 			= CONTACTS_PAGE + 0x38;
int const CONTACTS_YOMI_FIRST_NAME 				= CONTACTS_PAGE + 0x39;
int const CONTACTS_YOMI_LAST_NAME 				= CONTACTS_PAGE + 0x3A;
int const CONTACTS_COMPRESSED_RTF 				= CONTACTS_PAGE + 0x3B;
int const CONTACTS_PICTURE 						= CONTACTS_PAGE + 0x3C;


int const CALENDAR_PAGE = CALENDAR << PAGESHIFT;
int const CALENDAR_TIME_ZONE 					= CALENDAR_PAGE + 0x05;
int const CALENDAR_ALL_DAY_EVENT 				= CALENDAR_PAGE + 0x06;
int const CALENDAR_ATTENDEES 					= CALENDAR_PAGE + 0x07;
int const CALENDAR_ATTENDEE 					= CALENDAR_PAGE + 0x08;
int const CALENDAR_ATTENDEE_EMAIL 				= CALENDAR_PAGE + 0x09;
int const CALENDAR_ATTENDEE_NAME 				= CALENDAR_PAGE + 0x0A;
int const CALENDAR_BODY 						= CALENDAR_PAGE + 0x0B;
int const CALENDAR_BODY_TRUNCATED 				= CALENDAR_PAGE + 0x0C;
int const CALENDAR_BUSY_STATUS 					= CALENDAR_PAGE + 0x0D;
int const CALENDAR_CATEGORIES 					= CALENDAR_PAGE + 0x0E;
int const CALENDAR_CATEGORY 					= CALENDAR_PAGE + 0x0F;
int const CALENDAR_COMPRESSED_RTF 				= CALENDAR_PAGE + 0x10;
int const CALENDAR_DTSTAMP 						= CALENDAR_PAGE + 0x11;
int const CALENDAR_END_TIME 					= CALENDAR_PAGE + 0x12;
int const CALENDAR_EXCEPTION 					= CALENDAR_PAGE + 0x13;
int const CALENDAR_EXCEPTIONS 					= CALENDAR_PAGE + 0x14;
int const CALENDAR_EXCEPTION_IS_DELETED 		= CALENDAR_PAGE + 0x15;
int const CALENDAR_EXCEPTION_START_TIME 		= CALENDAR_PAGE + 0x16;
int const CALENDAR_LOCATION 					= CALENDAR_PAGE + 0x17;
int const CALENDAR_MEETING_STATUS 				= CALENDAR_PAGE + 0x18;
int const CALENDAR_ORGANIZER_EMAIL 				= CALENDAR_PAGE + 0x19;
int const CALENDAR_ORGANIZER_NAME 				= CALENDAR_PAGE + 0x1A;
int const CALENDAR_RECURRENCE 					= CALENDAR_PAGE + 0x1B;
int const CALENDAR_RECURRENCE_TYPE 				= CALENDAR_PAGE + 0x1C;
int const CALENDAR_RECURRENCE_UNTIL 			= CALENDAR_PAGE + 0x1D;
int const CALENDAR_RECURRENCE_OCCURRENCES 		= CALENDAR_PAGE + 0x1E;
int const CALENDAR_RECURRENCE_INTERVAL 			= CALENDAR_PAGE + 0x1F;
int const CALENDAR_RECURRENCE_DAYOFWEEK 		= CALENDAR_PAGE + 0x20;
int const CALENDAR_RECURRENCE_DAYOFMONTH 		= CALENDAR_PAGE + 0x21;
int const CALENDAR_RECURRENCE_WEEKOFMONTH 		= CALENDAR_PAGE + 0x22;
int const CALENDAR_RECURRENCE_MONTHOFYEAR 		= CALENDAR_PAGE + 0x23;
int const CALENDAR_REMINDER_MINS_BEFORE 		= CALENDAR_PAGE + 0x24;
int const CALENDAR_SENSITIVITY 					= CALENDAR_PAGE + 0x25;
int const CALENDAR_SUBJECT 						= CALENDAR_PAGE + 0x26;
int const CALENDAR_START_TIME 					= CALENDAR_PAGE + 0x27;
int const CALENDAR_UID 							= CALENDAR_PAGE + 0x28;
int const CALENDAR_ATTENDEE_STATUS 				= CALENDAR_PAGE + 0x29;
int const CALENDAR_ATTENDEE_TYPE 				= CALENDAR_PAGE + 0x2A;
int const CALENDAR_ATTACHMENT 					= CALENDAR_PAGE + 0x2B;
int const CALENDAR_ATTACHMENTS 					= CALENDAR_PAGE + 0x2C;
int const CALENDAR_ATT_NAME 					= CALENDAR_PAGE + 0x2D;
int const CALENDAR_ATT_SIZE 					= CALENDAR_PAGE + 0x2E;
int const CALENDAR_ATT_OID 						= CALENDAR_PAGE + 0x2F;
int const CALENDAR_ATT_METHOD 					= CALENDAR_PAGE + 0x30;
int const CALENDAR_ATT_REMOVED 					= CALENDAR_PAGE + 0x31;
int const CALENDAR_DISPLAY_NAME 				= CALENDAR_PAGE + 0x32;
int const CALENDAR_DISALLOW_NEW_TIME_PROPOSAL 	= CALENDAR_PAGE + 0x33;
int const CALENDAR_RESPONSE_REQUESTED 			= CALENDAR_PAGE + 0x34;
int const CALENDAR_APPOINTMENT_REPLY_TIME 		= CALENDAR_PAGE + 0x35;
int const CALENDAR_RESPONSE_TYPE 				= CALENDAR_PAGE + 0x36;
int const CALENDAR_CALENDAR_TYPE 				= CALENDAR_PAGE + 0x37;
int const CALENDAR_IS_LEAP_MONTH 				= CALENDAR_PAGE + 0x38;
int const CALENDAR_FIRST_DAY_OF_WEEK 			= CALENDAR_PAGE + 0x39;
int const CALENDAR_ONLINE_MEETING_CONFLINK 		= CALENDAR_PAGE + 0x3A;
int const CALENDAR_ONLINE_MEETING_EXTERNAL_LINK = CALENDAR_PAGE + 0x3B;


int const FOLDER_PAGE = FOLDER << PAGESHIFT;
int const FOLDER_FOLDERS 		= FOLDER_PAGE + 0x05;
int const FOLDER_FOLDER 		= FOLDER_PAGE + 0x06;
int const FOLDER_DISPLAY_NAME 	= FOLDER_PAGE + 0x07;
int const FOLDER_SERVER_ID 		= FOLDER_PAGE + 0x08;
int const FOLDER_PARENT_ID 		= FOLDER_PAGE + 0x09;
int const FOLDER_TYPE 			= FOLDER_PAGE + 0x0A;
int const FOLDER_RESPONSE 		= FOLDER_PAGE + 0x0B;
int const FOLDER_STATUS 		= FOLDER_PAGE + 0x0C;
int const FOLDER_CONTENT_CLASS 	= FOLDER_PAGE + 0x0D;
int const FOLDER_CHANGES 		= FOLDER_PAGE + 0x0E;
int const FOLDER_ADD 			= FOLDER_PAGE + 0x0F;
int const FOLDER_DELETE 		= FOLDER_PAGE + 0x10;
int const FOLDER_UPDATE 		= FOLDER_PAGE + 0x11;
int const FOLDER_SYNC_KEY 		= FOLDER_PAGE + 0x12;
int const FOLDER_FOLDER_CREATE 	= FOLDER_PAGE + 0x13;
int const FOLDER_FOLDER_DELETE	= FOLDER_PAGE + 0x14;
int const FOLDER_FOLDER_UPDATE 	= FOLDER_PAGE + 0x15;
int const FOLDER_FOLDER_SYNC 	= FOLDER_PAGE + 0x16;
int const FOLDER_COUNT 			= FOLDER_PAGE + 0x17;
int const FOLDER_VERSION 		= FOLDER_PAGE + 0x18;


int const MREQ_PAGE = MREQ << PAGESHIFT;
int const MREQ_CAL_ID 			= MREQ_PAGE + 0x05;
int const MREQ_COLLECTION_ID 	= MREQ_PAGE + 0x06;
int const MREQ_MEETING_RESPONSE = MREQ_PAGE + 0x07;
int const MREQ_REQ_ID 			= MREQ_PAGE + 0x08;
int const MREQ_REQUEST 			= MREQ_PAGE + 0x09;
int const MREQ_RESULT 			= MREQ_PAGE + 0x0A;
int const MREQ_STATUS 			= MREQ_PAGE + 0x0B;
int const MREQ_USER_RESPONSE 	= MREQ_PAGE + 0x0C;
int const MREQ_VERSION 			= MREQ_PAGE + 0x0D;


int const EMAIL_PAGE = EMAIL << PAGESHIFT;
int const EMAIL_ATTACHMENT 					= EMAIL_PAGE + 0x05;
int const EMAIL_ATTACHMENTS 				= EMAIL_PAGE + 0x06;
int const EMAIL_ATT_NAME 					= EMAIL_PAGE + 0x07;
int const EMAIL_ATT_SIZE 					= EMAIL_PAGE + 0x08;
int const EMAIL_ATT0ID 						= EMAIL_PAGE + 0x09;
int const EMAIL_ATT_METHOD 					= EMAIL_PAGE + 0x0A;
int const EMAIL_ATT_REMOVED 				= EMAIL_PAGE + 0x0B;
int const EMAIL_BODY 						= EMAIL_PAGE + 0x0C;
int const EMAIL_BODY_SIZE 					= EMAIL_PAGE + 0x0D;
int const EMAIL_BODY_TRUNCATED 				= EMAIL_PAGE + 0x0E;
int const EMAIL_DATE_RECEIVED 				= EMAIL_PAGE + 0x0F;
int const EMAIL_DISPLAY_NAME 				= EMAIL_PAGE + 0x10;
int const EMAIL_DISPLAY_TO 					= EMAIL_PAGE + 0x11;
int const EMAIL_IMPORTANCE 					= EMAIL_PAGE + 0x12;
int const EMAIL_MESSAGE_CLASS 				= EMAIL_PAGE + 0x13;
int const EMAIL_SUBJECT 					= EMAIL_PAGE + 0x14;
int const EMAIL_READ 						= EMAIL_PAGE + 0x15;
int const EMAIL_TO 							= EMAIL_PAGE + 0x16;
int const EMAIL_CC 							= EMAIL_PAGE + 0x17;
int const EMAIL_FROM 						= EMAIL_PAGE + 0x18;
int const EMAIL_REPLY_TO 					= EMAIL_PAGE + 0x19;
int const EMAIL_ALL_DAY_EVENT 				= EMAIL_PAGE + 0x1A;
int const EMAIL_CATEGORIES 					= EMAIL_PAGE + 0x1B;
int const EMAIL_CATEGORY 					= EMAIL_PAGE + 0x1C;
int const EMAIL_DTSTAMP 					= EMAIL_PAGE + 0x1D;
int const EMAIL_END_TIME 					= EMAIL_PAGE + 0x1E;
int const EMAIL_INSTANCE_TYPE 				= EMAIL_PAGE + 0x1F;
int const EMAIL_INTD_BUSY_STATUS 			= EMAIL_PAGE + 0x20;
int const EMAIL_LOCATION 					= EMAIL_PAGE + 0x21;
int const EMAIL_MEETING_REQUEST 			= EMAIL_PAGE + 0x22;
int const EMAIL_ORGANIZER 					= EMAIL_PAGE + 0x23;
int const EMAIL_RECURRENCE_ID 				= EMAIL_PAGE + 0x24;
int const EMAIL_REMINDER 					= EMAIL_PAGE + 0x25;
int const EMAIL_RESPONSE_REQUESTED 			= EMAIL_PAGE + 0x26;
int const EMAIL_RECURRENCES 				= EMAIL_PAGE + 0x27;
int const EMAIL_RECURRENCE 					= EMAIL_PAGE + 0x28;
int const EMAIL_RECURRENCE_TYPE 			= EMAIL_PAGE + 0x29;
int const EMAIL_RECURRENCE_UNTIL 			= EMAIL_PAGE + 0x2A;
int const EMAIL_RECURRENCE_OCCURRENCES 		= EMAIL_PAGE + 0x2B;
int const EMAIL_RECURRENCE_INTERVAL 		= EMAIL_PAGE + 0x2C;
int const EMAIL_RECURRENCE_DAYOFWEEK 		= EMAIL_PAGE + 0x2D;
int const EMAIL_RECURRENCE_DAYOFMONTH 		= EMAIL_PAGE + 0x2E;
int const EMAIL_RECURRENCE_WEEKOFMONTH 		= EMAIL_PAGE + 0x2F;
int const EMAIL_RECURRENCE_MONTHOFYEAR 		= EMAIL_PAGE + 0x30;
int const EMAIL_START_TIME 					= EMAIL_PAGE + 0x31;
int const EMAIL_SENSITIVITY 				= EMAIL_PAGE + 0x32;
int const EMAIL_TIME_ZONE 					= EMAIL_PAGE + 0x33;
int const EMAIL_GLOBAL_OBJID 				= EMAIL_PAGE + 0x34;
int const EMAIL_THREAD_TOPIC 				= EMAIL_PAGE + 0x35;
int const EMAIL_MIME_DATA 					= EMAIL_PAGE + 0x36;
int const EMAIL_MIME_TRUNCATED 				= EMAIL_PAGE + 0x37;
int const EMAIL_MIME_SIZE 					= EMAIL_PAGE + 0x38;
int const EMAIL_INTERNET_CPID 				= EMAIL_PAGE + 0x39;
int const EMAIL_FLAG 						= EMAIL_PAGE + 0x3A;
int const EMAIL_FLAG_STATUS 				= EMAIL_PAGE + 0x3B;
int const EMAIL_CONTENT_CLASS 				= EMAIL_PAGE + 0x3C;
int const EMAIL_FLAG_TYPE 					= EMAIL_PAGE + 0x3D;
int const EMAIL_COMPLETE_TIME 				= EMAIL_PAGE + 0x3E;
int const EMAIL_DISALLOW_NEW_TIME_PROPOSAL 	= EMAIL_PAGE + 0x3F;


int const TASK_PAGE = TASK << PAGESHIFT;
int const TASK_BODY 					= TASK_PAGE + 0x05;
int const TASK_BODY_SIZE 				= TASK_PAGE + 0x06;
int const TASK_BODY_TRUNCATED 			= TASK_PAGE + 0x07;
int const TASK_CATEGORIES 				= TASK_PAGE + 0x08;
int const TASK_CATEGORY 				= TASK_PAGE + 0x09;
int const TASK_COMPLETE 				= TASK_PAGE + 0x0A;
int const TASK_DATE_COMPLETED 			= TASK_PAGE + 0x0B;
int const TASK_DUE_DATE 				= TASK_PAGE + 0x0C;
int const TASK_UTC_DUE_DATE 			= TASK_PAGE + 0x0D;
int const TASK_IMPORTANCE 				= TASK_PAGE + 0x0E;
int const TASK_RECURRENCE 				= TASK_PAGE + 0x0F;
int const TASK_RECURRENCE_TYPE 			= TASK_PAGE + 0x10;
int const TASK_RECURRENCE_START 		= TASK_PAGE + 0x11;
int const TASK_RECURRENCE_UNTIL 		= TASK_PAGE + 0x12;
int const TASK_RECURRENCE_OCCURRENCES 	= TASK_PAGE + 0x13;
int const TASK_RECURRENCE_INTERVAL 		= TASK_PAGE + 0x14;
int const TASK_RECURRENCE_DAY_OF_MONTH 	= TASK_PAGE + 0x15;
int const TASK_RECURRENCE_DAY_OF_WEEK 	= TASK_PAGE + 0x16;
int const TASK_RECURRENCE_WEEK_OF_MONTH = TASK_PAGE + 0x17;
int const TASK_RECURRENCE_MONTH_OF_YEAR = TASK_PAGE + 0x18;
int const TASK_RECURRENCE_REGENERATE 	= TASK_PAGE + 0x19;
int const TASK_RECURRENCE_DEAD_OCCUR 	= TASK_PAGE + 0x1A;
int const TASK_REMINDER_SET 			= TASK_PAGE + 0x1B;
int const TASK_REMINDER_TIME 			= TASK_PAGE + 0x1C;
int const TASK_SENSITIVITY 				= TASK_PAGE + 0x1D;
int const TASK_START_DATE 				= TASK_PAGE + 0x1E;
int const TASK_UTC_START_DATE 			= TASK_PAGE + 0x1F;
int const TASK_SUBJECT 					= TASK_PAGE + 0x20;
int const COMPRESSED_RTF 				= TASK_PAGE + 0x21;
int const ORDINAL_DATE 					= TASK_PAGE + 0x22;
int const SUBORDINAL_DATE 				= TASK_PAGE + 0x23;


int const MOVE_PAGE = MOVE << PAGESHIFT;
int const MOVE_MOVE_ITEMS 	= MOVE_PAGE + 0x05;
int const MOVE_MOVE 		= MOVE_PAGE + 0x06;
int const MOVE_SRCMSGID 	= MOVE_PAGE + 0x07;
int const MOVE_SRCFLDID 	= MOVE_PAGE + 0x08;
int const MOVE_DSTFLDID 	= MOVE_PAGE + 0x09;
int const MOVE_RESPONSE 	= MOVE_PAGE + 0x0A;
int const MOVE_STATUS 		= MOVE_PAGE + 0x0B;
int const MOVE_DSTMSGID 	= MOVE_PAGE + 0x0C;


int const CONTACTS2_PAGE = CONTACTS2 << PAGESHIFT;
int const CONTACTS2_CUSTOMER_ID 		= CONTACTS2_PAGE + 0x05;
int const CONTACTS2_GOVERNMENT_ID 		= CONTACTS2_PAGE + 0x06;
int const CONTACTS2_IM_ADDRESS 			= CONTACTS2_PAGE + 0x07;
int const CONTACTS2_IM_ADDRESS_2 		= CONTACTS2_PAGE + 0x08;
int const CONTACTS2_IM_ADDRESS_3 		= CONTACTS2_PAGE + 0x09;
int const CONTACTS2_MANAGER_NAME 		= CONTACTS2_PAGE + 0x0A;
int const CONTACTS2_COMPANY_MAIN_PHONE 	= CONTACTS2_PAGE + 0x0B;
int const CONTACTS2_ACCOUNT_NAME 		= CONTACTS2_PAGE + 0x0C;
int const CONTACTS2_NICKNAME 			= CONTACTS2_PAGE + 0x0D;
int const CONTACTS2_MMS 				= CONTACTS2_PAGE + 0x0E;


int const PING_PAGE = PING << PAGESHIFT;
int const PING_PING 				= PING_PAGE + 0x05;
int const PING_AUTD_STATE 			= PING_PAGE + 0x06;
int const PING_STATUS 				= PING_PAGE + 0x07;
int const PING_HEARTBEAT_INTERVAL 	= PING_PAGE + 0x08;
int const PING_FOLDERS 				= PING_PAGE + 0x09;
int const PING_FOLDER 				= PING_PAGE + 0x0A;
int const PING_ID 					= PING_PAGE + 0x0B;
int const PING_CLASS 				= PING_PAGE + 0x0C;
int const PING_MAX_FOLDERS 			= PING_PAGE + 0x0D;


int const SEARCH_PAGE = SEARCH << PAGESHIFT;
int const SEARCH_SEARCH 			= SEARCH_PAGE + 0x05;
int const SEARCH_STORES 			= SEARCH_PAGE + 0x06;
int const SEARCH_STORE 				= SEARCH_PAGE + 0x07;
int const SEARCH_NAME 				= SEARCH_PAGE + 0x08;
int const SEARCH_QUERY 				= SEARCH_PAGE + 0x09;
int const SEARCH_OPTIONS 			= SEARCH_PAGE + 0x0A;
int const SEARCH_RANGE 				= SEARCH_PAGE + 0x0B;
int const SEARCH_STATUS 			= SEARCH_PAGE + 0x0C;
int const SEARCH_RESPONSE 			= SEARCH_PAGE + 0x0D;
int const SEARCH_RESULT 			= SEARCH_PAGE + 0x0E;
int const SEARCH_PROPERTIES 		= SEARCH_PAGE + 0x0F;
int const SEARCH_TOTAL 				= SEARCH_PAGE + 0x10;
int const SEARCH_EQUAL_TO 			= SEARCH_PAGE + 0x11;
int const SEARCH_VALUE 				= SEARCH_PAGE + 0x12;
int const SEARCH_AND 				= SEARCH_PAGE + 0x13;
int const SEARCH_OR 				= SEARCH_PAGE + 0x14;
int const SEARCH_FREE_TEXT 			= SEARCH_PAGE + 0x15;
int const SEARCH_SUBSTRING_OP 		= SEARCH_PAGE + 0x16;
int const SEARCH_DEEP_TRAVERSAL 	= SEARCH_PAGE + 0x17;
int const SEARCH_LONG_ID 			= SEARCH_PAGE + 0x18;
int const SEARCH_REBUILD_RESULTS 	= SEARCH_PAGE + 0x19;
int const SEARCH_LESS_THAN 			= SEARCH_PAGE + 0x1A;
int const SEARCH_GREATER_THAN 		= SEARCH_PAGE + 0x1B;
int const SEARCH_SCHEMA 			= SEARCH_PAGE + 0x1C;
int const SEARCH_SUPPORTED 			= SEARCH_PAGE + 0x1D;
int const SEARCH_USER_NAME 			= SEARCH_PAGE + 0x1E;
int const SEARCH_PASSWORD 			= SEARCH_PAGE + 0x1F;
int const SEARCH_CONVERSATION_ID 	= SEARCH_PAGE + 0x20;
// The following tags are supported in MS-AS 14.1 and above
int const SEARCH_PICTURE 			= SEARCH_PAGE + 0x21;
int const SEARCH_MAX_SIZE 			= SEARCH_PAGE + 0x22;
int const SEARCH_MAX_PICTURES 		= SEARCH_PAGE + 0x23;


int const GAL_PAGE = GAL << PAGESHIFT;
int const GAL_DISPLAY_NAME 	= GAL_PAGE + 0x05;
int const GAL_PHONE 		= GAL_PAGE + 0x06;
int const GAL_OFFICE 		= GAL_PAGE + 0x07;
int const GAL_TITLE 		= GAL_PAGE + 0x08;
int const GAL_COMPANY 		= GAL_PAGE + 0x09;
int const GAL_ALIAS 		= GAL_PAGE + 0x0A;
int const GAL_FIRST_NAME 	= GAL_PAGE + 0x0B;
int const GAL_LAST_NAME 	= GAL_PAGE + 0x0C;
int const GAL_HOME_PHONE 	= GAL_PAGE + 0x0D;
int const GAL_MOBILE_PHONE 	= GAL_PAGE + 0x0E;
int const GAL_EMAIL_ADDRESS = GAL_PAGE + 0x0F;
// The following tags are supported in MS-AS 14.1 and above
int const GAL_PICTURE 		= GAL_PAGE + 0x10;
int const GAL_STATUS 		= GAL_PAGE + 0x11;
int const GAL_DATA 			= GAL_PAGE + 0x12;


int const PROVISION_PAGE = PROVISION << PAGESHIFT;
// EAS 2.5
int const PROVISION_PROVISION 	= PROVISION_PAGE + 0x05;
int const PROVISION_POLICIES 	= PROVISION_PAGE + 0x06;
int const PROVISION_POLICY 		= PROVISION_PAGE + 0x07;
int const PROVISION_POLICY_TYPE = PROVISION_PAGE + 0x08;
int const PROVISION_POLICY_KEY 	= PROVISION_PAGE + 0x09;
int const PROVISION_DATA 		= PROVISION_PAGE + 0x0A;
int const PROVISION_STATUS 		= PROVISION_PAGE + 0x0B;
int const PROVISION_REMOTE_WIPE = PROVISION_PAGE + 0x0C;
// EAS 12.0
int const PROVISION_EAS_PROVISION_DOC 					= PROVISION_PAGE + 0x0D;
int const PROVISION_DEVICE_PASSWORD_ENABLED 			= PROVISION_PAGE + 0x0E;
int const PROVISION_ALPHA_DEVICE_PASSWORD_ENABLED 		= PROVISION_PAGE + 0x0F;
int const PROVISION_DEVICE_ENCRYPTION_ENABLED 			= PROVISION_PAGE + 0x10;
int const PROVISION_PASSWORD_RECOVERY_ENABLED 			= PROVISION_PAGE + 0x11;
int const PROVISION_ATTACHMENTS_ENABLED 				= PROVISION_PAGE + 0x13;
int const PROVISION_MIN_DEVICE_PASSWORD_LENGTH 			= PROVISION_PAGE + 0x14;
int const PROVISION_MAX_INACTIVITY_TIME_DEVICE_LOCK 	= PROVISION_PAGE + 0x15;
int const PROVISION_MAX_DEVICE_PASSWORD_FAILED_ATTEMPTS = PROVISION_PAGE + 0x16;
int const PROVISION_MAX_ATTACHMENT_SIZE 				= PROVISION_PAGE + 0x17;
int const PROVISION_ALLOW_SIMPLE_DEVICE_PASSWORD 		= PROVISION_PAGE + 0x18;
int const PROVISION_DEVICE_PASSWORD_EXPIRATION 			= PROVISION_PAGE + 0x19;
int const PROVISION_DEVICE_PASSWORD_HISTORY 			= PROVISION_PAGE + 0x1A;
int const PROVISION_MAX_SUPPORTED_TAG 					= PROVISION_DEVICE_PASSWORD_HISTORY;
// EAS 12.1
int const PROVISION_ALLOW_STORAGE_CARD 						= PROVISION_PAGE + 0x1B;
int const PROVISION_ALLOW_CAMERA 							= PROVISION_PAGE + 0x1C;
int const PROVISION_REQUIRE_DEVICE_ENCRYPTION 				= PROVISION_PAGE + 0x1D;
int const PROVISION_ALLOW_UNSIGNED_APPLICATIONS 			= PROVISION_PAGE + 0x1E;
int const PROVISION_ALLOW_UNSIGNED_INSTALLATION_PACKAGES 	= PROVISION_PAGE + 0x1F;
int const PROVISION_MIN_DEVICE_PASSWORD_COMPLEX_CHARS 		= PROVISION_PAGE + 0x20;
int const PROVISION_ALLOW_WIFI 								= PROVISION_PAGE + 0x21;
int const PROVISION_ALLOW_TEXT_MESSAGING 					= PROVISION_PAGE + 0x22;
int const PROVISION_ALLOW_POP_IMAP_EMAIL 					= PROVISION_PAGE + 0x23;
int const PROVISION_ALLOW_BLUETOOTH 						= PROVISION_PAGE + 0x24;
int const PROVISION_ALLOW_IRDA 								= PROVISION_PAGE + 0x25;
int const PROVISION_REQUIRE_MANUAL_SYNC_WHEN_ROAMING 		= PROVISION_PAGE + 0x26;
int const PROVISION_ALLOW_DESKTOP_SYNC 						= PROVISION_PAGE + 0x27;
int const PROVISION_MAX_CALENDAR_AGE_FILTER 				= PROVISION_PAGE + 0x28;
int const PROVISION_ALLOW_HTML_EMAIL 						= PROVISION_PAGE + 0x29;
int const PROVISION_MAX_EMAIL_AGE_FILTER 					= PROVISION_PAGE + 0x2A;
int const PROVISION_MAX_EMAIL_BODY_TRUNCATION_SIZE 			= PROVISION_PAGE + 0x2B;
int const PROVISION_MAX_EMAIL_HTML_BODY_TRUNCATION_SIZE 	= PROVISION_PAGE + 0x2C;
int const PROVISION_REQUIRE_SIGNED_SMIME_MESSAGES 			= PROVISION_PAGE + 0x2D;
int const PROVISION_REQUIRE_ENCRYPTED_SMIME_MESSAGES 		= PROVISION_PAGE + 0x2E;
int const PROVISION_REQUIRE_SIGNED_SMIME_ALGORITHM 			= PROVISION_PAGE + 0x2F;
int const PROVISION_REQUIRE_ENCRYPTION_SMIME_ALGORITHM 		= PROVISION_PAGE + 0x30;
int const PROVISION_ALLOW_SMIME_ENCRYPTION_NEGOTIATION 		= PROVISION_PAGE + 0x31;
int const PROVISION_ALLOW_SMIME_SOFT_CERTS 					= PROVISION_PAGE + 0x32;
int const PROVISION_ALLOW_BROWSER 							= PROVISION_PAGE + 0x33;
int const PROVISION_ALLOW_CONSUMER_EMAIL 					= PROVISION_PAGE + 0x34;
int const PROVISION_ALLOW_REMOTE_DESKTOP 					= PROVISION_PAGE + 0x35;
int const PROVISION_ALLOW_INTERNET_SHARING 					= PROVISION_PAGE + 0x36;
int const PROVISION_UNAPPROVED_IN_ROM_APPLICATION_LIST 		= PROVISION_PAGE + 0x37;
int const PROVISION_APPLICATION_NAME 						= PROVISION_PAGE + 0x38;
int const PROVISION_APPROVED_APPLICATION_LIST 				= PROVISION_PAGE + 0x39;
int const PROVISION_HASH 									= PROVISION_PAGE + 0x3A;

int const BASE_PAGE = BASE << PAGESHIFT;
int const BASE_BODY_PREFERENCE 		= BASE_PAGE + 0x05;
int const BASE_TYPE 				= BASE_PAGE + 0x06;
int const BASE_TRUNCATION_SIZE 		= BASE_PAGE + 0x07;
int const BASE_ALL_OR_NONE 			= BASE_PAGE + 0x08;
int const BASE_RESERVED 			= BASE_PAGE + 0x09;
int const BASE_BODY 				= BASE_PAGE + 0x0A;
int const BASE_DATA 				= BASE_PAGE + 0x0B;
int const BASE_ESTIMATED_DATA_SIZE 	= BASE_PAGE + 0x0C;
int const BASE_TRUNCATED 			= BASE_PAGE + 0x0D;
int const BASE_ATTACHMENTS 			= BASE_PAGE + 0x0E;
int const BASE_ATTACHMENT 			= BASE_PAGE + 0x0F;
int const BASE_DISPLAY_NAME 		= BASE_PAGE + 0x10;
int const BASE_FILE_REFERENCE 		= BASE_PAGE + 0x11;
int const BASE_METHOD 				= BASE_PAGE + 0x12;
int const BASE_CONTENT_ID 			= BASE_PAGE + 0x13;
int const BASE_CONTENT_LOCATION 	= BASE_PAGE + 0x14;
int const BASE_IS_INLINE 			= BASE_PAGE + 0x15;
int const BASE_NATIVE_BODY_TYPE 	= BASE_PAGE + 0x16;
int const BASE_CONTENT_TYPE 		= BASE_PAGE + 0x17;

int const SETTINGS_PAGE = SETTINGS << PAGESHIFT;
int const SETTINGS_SETTINGS 					= SETTINGS_PAGE + 0x05;
int const SETTINGS_STATUS 						= SETTINGS_PAGE + 0x06;
int const SETTINGS_GET 							= SETTINGS_PAGE + 0x07;
int const SETTINGS_SET 							= SETTINGS_PAGE + 0x08;
int const SETTINGS_OOF 							= SETTINGS_PAGE + 0x09;
int const SETTINGS_OOF_STATE 					= SETTINGS_PAGE + 0x0A;
int const SETTINGS_START_TIME 					= SETTINGS_PAGE + 0x0B;
int const SETTINGS_END_TIME 					= SETTINGS_PAGE + 0x0C;
int const SETTINGS_OOF_MESSAGE 					= SETTINGS_PAGE + 0x0D;
int const SETTINGS_APPLIES_TO_INTERNAL 			= SETTINGS_PAGE + 0x0E;
int const SETTINGS_APPLIES_TO_EXTERNAL_KNOWN 	= SETTINGS_PAGE + 0x0F;
int const SETTINGS_APPLIES_TO_EXTERNAL_UNKNOWN 	= SETTINGS_PAGE + 0x10;
int const SETTINGS_ENABLED 						= SETTINGS_PAGE + 0x11;
int const SETTINGS_REPLY_MESSAGE 				= SETTINGS_PAGE + 0x12;
int const SETTINGS_BODY_TYPE 					= SETTINGS_PAGE + 0x13;
int const SETTINGS_DEVICE_PASSWORD 				= SETTINGS_PAGE + 0x14;
int const SETTINGS_PASSWORD 					= SETTINGS_PAGE + 0x15;
int const SETTINGS_DEVICE_INFORMATION 			= SETTINGS_PAGE + 0x16;
int const SETTINGS_MODEL 						= SETTINGS_PAGE + 0x17;
int const SETTINGS_IMEI 						= SETTINGS_PAGE + 0x18;
int const SETTINGS_FRIENDLY_NAME 				= SETTINGS_PAGE + 0x19;
int const SETTINGS_OS 							= SETTINGS_PAGE + 0x1A;
int const SETTINGS_OS_LANGUAGE 					= SETTINGS_PAGE + 0x1B;
int const SETTINGS_PHONE_NUMBER 				= SETTINGS_PAGE + 0x1C;
int const SETTINGS_USER_INFORMATION 			= SETTINGS_PAGE + 0x1D;
int const SETTINGS_EMAIL_ADDRESS 				= SETTINGS_PAGE + 0x1E;
int const SETTINGS_SMTP_ADDRESS 				= SETTINGS_PAGE + 0x1F;
int const SETTINGS_USER_AGENT 					= SETTINGS_PAGE + 0x20;
int const SETTINGS_ENABLE_OUTGOING_SMS 			= SETTINGS_PAGE + 0x21;
int const SETTINGS_MOBILE_OPERATOR 				= SETTINGS_PAGE + 0x22;

int const ITEMS_PAGE = ITEMS << PAGESHIFT;
int const ITEMS_ITEMS 				= ITEMS_PAGE + 0x05;
int const ITEMS_FETCH 				= ITEMS_PAGE + 0x06;
int const ITEMS_STORE 				= ITEMS_PAGE + 0x07;
int const ITEMS_OPTIONS 			= ITEMS_PAGE + 0x08;
int const ITEMS_RANGE 				= ITEMS_PAGE + 0x09;
int const ITEMS_TOTAL 				= ITEMS_PAGE + 0x0A;
int const ITEMS_PROPERTIES 			= ITEMS_PAGE + 0x0B;
int const ITEMS_DATA 				= ITEMS_PAGE + 0x0C;
int const ITEMS_STATUS 				= ITEMS_PAGE + 0x0D;
int const ITEMS_RESPONSE 			= ITEMS_PAGE + 0x0E;
int const ITEMS_VERSION 			= ITEMS_PAGE + 0x0F;
int const ITEMS_SCHEMA 				= ITEMS_PAGE + 0x10;
int const ITEMS_PART 				= ITEMS_PAGE + 0x11;
int const ITEMS_EMPTY_FOLDER 		= ITEMS_PAGE + 0x12;
int const ITEMS_DELETE_SUB_FOLDERS 	= ITEMS_PAGE + 0x13;
int const ITEMS_USERNAME 			= ITEMS_PAGE + 0x14;
int const ITEMS_PASSWORD 			= ITEMS_PAGE + 0x15;
int const ITEMS_MOVE 				= ITEMS_PAGE + 0x16;
int const ITEMS_DSTFLDID 			= ITEMS_PAGE + 0x17;
int const ITEMS_CONVERSATION_ID 	= ITEMS_PAGE + 0x18;
int const ITEMS_MOVE_ALWAYS 		= ITEMS_PAGE + 0x19;

int const COMPOSE_PAGE = COMPOSE << PAGESHIFT;
int const COMPOSE_SEND_MAIL 			= COMPOSE_PAGE + 0x05;
int const COMPOSE_SMART_FORWARD 		= COMPOSE_PAGE + 0x06;
int const COMPOSE_SMART_REPLY 			= COMPOSE_PAGE + 0x07;
int const COMPOSE_SAVE_IN_SENT_ITEMS 	= COMPOSE_PAGE + 0x08;
int const COMPOSE_REPLACE_MIME 			= COMPOSE_PAGE + 0x09;
// There is no tag for COMPOSE_PAGE + 0x0A
int const COMPOSE_SOURCE 				= COMPOSE_PAGE + 0x0B;
int const COMPOSE_FOLDER_ID 			= COMPOSE_PAGE + 0x0C;
int const COMPOSE_ITEM_ID 				= COMPOSE_PAGE + 0x0D;
int const COMPOSE_LONG_ID 				= COMPOSE_PAGE + 0x0E;
int const COMPOSE_INSTANCE_ID 			= COMPOSE_PAGE + 0x0F;
int const COMPOSE_MIME 					= COMPOSE_PAGE + 0x10;
int const COMPOSE_CLIENT_ID 			= COMPOSE_PAGE + 0x11;
int const COMPOSE_STATUS 				= COMPOSE_PAGE + 0x12;
int const COMPOSE_ACCOUNT_ID 			= COMPOSE_PAGE + 0x13;

int const EMAIL2_PAGE = EMAIL2 << PAGESHIFT;
int const EMAIL2_UM_CALLER_ID 				= EMAIL2_PAGE + 0x05;
int const EMAIL2_UM_USER_NOTES 				= EMAIL2_PAGE + 0x06;
int const EMAIL2_UM_ATT_DURATION 			= EMAIL2_PAGE + 0x07;
int const EMAIL2_UM_ATT_ORDER 				= EMAIL2_PAGE + 0x08;
int const EMAIL2_CONVERSATION_ID 			= EMAIL2_PAGE + 0x09;
int const EMAIL2_CONVERSATION_INDEX 		= EMAIL2_PAGE + 0x0A;
int const EMAIL2_LAST_VERB_EXECUTED 		= EMAIL2_PAGE + 0x0B;
int const EMAIL2_LAST_VERB_EXECUTION_TIME 	= EMAIL2_PAGE + 0x0C;
int const EMAIL2_RECEIVED_AS_BCC 			= EMAIL2_PAGE + 0x0D;
int const EMAIL2_SENDER 					= EMAIL2_PAGE + 0x0E;
int const EMAIL2_CALENDAR_TYPE 				= EMAIL2_PAGE + 0x0F;
int const EMAIL2_IS_LEAP_MONTH 				= EMAIL2_PAGE + 0x10;
int const EMAIL2_ACCOUNT_ID 				= EMAIL2_PAGE + 0x11;
int const EMAIL2_FIRST_DAY_OF_WEEK 			= EMAIL2_PAGE + 0x12;
int const EMAIL2_MEETING_MESSAGE_TYPE 		= EMAIL2_PAGE + 0x13;

int const RIGHTS_PAGE = RIGHTS << PAGESHIFT;
int const RIGHTS_SUPPORT 						= RIGHTS_PAGE + 0x05;
int const RIGHTS_TEMPLATES 						= RIGHTS_PAGE + 0x06;
int const RIGHTS_TEMPLATE 						= RIGHTS_PAGE + 0x07;
int const RIGHTS_LICENSE 						= RIGHTS_PAGE + 0x08;
int const RIGHTS_EDIT_ALLOWED 					= RIGHTS_PAGE + 0x09;
int const RIGHTS_REPLY_ALLOWED 					= RIGHTS_PAGE + 0x0A;
int const RIGHTS_REPLY_ALL_ALLOWED 				= RIGHTS_PAGE + 0x0B;
int const RIGHTS_FORWARD_ALLOWED 				= RIGHTS_PAGE + 0x0C;
int const RIGHTS_MODIFY_RECIPIENTS_ALLOWED 		= RIGHTS_PAGE + 0x0D;
int const RIGHTS_EXTRACT_ALLOWED 				= RIGHTS_PAGE + 0x0E;
int const RIGHTS_PRINT_ALLOWED 					= RIGHTS_PAGE + 0x0F;
int const RIGHTS_EXPORT_ALLOWED 				= RIGHTS_PAGE + 0x10;
int const RIGHTS_PROGRAMMATIC_ACCESS_ALLOWED 	= RIGHTS_PAGE + 0x11;
int const RIGHTS_OWNER 							= RIGHTS_PAGE + 0x12;
int const RIGHTS_CONTENT_EXPIRY_DATE 			= RIGHTS_PAGE + 0x13;
int const RIGHTS_TEMPLATE_ID 					= RIGHTS_PAGE + 0x14;
int const RIGHTS_TEMPLATE_NAME 					= RIGHTS_PAGE + 0x15;
int const RIGHTS_TEMPLATE_DESCRIPTION 			= RIGHTS_PAGE + 0x16;
int const RIGHTS_CONTENT_OWNER 					= RIGHTS_PAGE + 0x17;
int const RIGHTS_REMOVE_RM_DISTRIBUTION 		= RIGHTS_PAGE + 0x18;

@end
